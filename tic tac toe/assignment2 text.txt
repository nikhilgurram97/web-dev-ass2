<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="utf-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <title>Github Finder</title>

  <!-- Bootstrap core CSS -->
  <link href="https://bootswatch.com/simplex/bootstrap.min.css" rel="stylesheet">
  <link rel="stylesheet" href="css/style.css">
</head>

<body>

<nav class="navbar navbar-inverse">
  <div class="container">
    <div class="navbar-header">
      <button type="button" class="navbar-toggle collapsed" data-toggle="collapse" data-target="#navbar" aria-expanded="false" aria-controls="navbar">
        <span class="sr-only">Toggle navigation</span>
        <span class="icon-bar"></span>
        <span class="icon-bar"></span>
        <span class="icon-bar"></span>
      </button>
      <a class="navbar-brand" href="#">Github Finder</a>
    </div>
    <div id="navbar" class="collapse navbar-collapse">
      <ul class="nav navbar-nav">

      </ul>
    </div><!--/.nav-collapse -->
  </div>
</nav>

<div class="container">

  <div class="searchContainer">
    <h1>Search Github Users</h1>
    <p class="lead">Enter a username to fetch a users profile info and repos</p>
    <input type="text" id="searchUser" class="form-control" placeholder="Github Username...">
  </div>
  <br>
  <div id="profile"></div>

</div><!-- /.container -->

<script
        src="https://code.jquery.com/jquery-3.1.1.js"
        integrity="sha256-16cdPddA6VdVInumRGo6IbivbERE8p7CQR3HzTBuELA="
        crossorigin="anonymous"></script>
<script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js"></script>
<script src="script.js"></script>
</body>
</html>



<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>Github Finder</title>

    <!-- Bootstrap core CSS -->
    <link href="https://bootswatch.com/simplex/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="css/style.css">
</head>

<body>

<nav class="navbar navbar-inverse">
    <div class="container">
        <div class="navbar-header">
            <button type="button" class="navbar-toggle collapsed" data-toggle="collapse" data-target="#navbar" aria-expanded="false" aria-controls="navbar">
                <span class="sr-only">Toggle navigation</span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
            </button>
            <a class="navbar-brand" href="#">Github Finder</a>
        </div>
        <div id="navbar" class="collapse navbar-collapse">
            <ul class="nav navbar-nav">

            </ul>
        </div><!--/.nav-collapse -->
    </div>
</nav>

<div class="registration">

    <div>
        <form action="login.html" method="get">
        <h1>Registration Form</h1>
        <p>Please enter the following details</p>
        UserName:<input type="text" id="username" ><br>
        Password:<input type="password" id="Password" ><br>
        Email ID:<input type="text" id="email id" ><br>
        <input type="submit" id="submit" value="register">
        </form>
    </div>
    <br>


<script
        src="https://code.jquery.com/jquery-3.1.1.js"
        integrity="sha256-16cdPddA6VdVInumRGo6IbivbERE8p7CQR3HzTBuELA="
        crossorigin="anonymous"></script>
<script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js"></script>
</body>
</html>




<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title><!DOCTYPE html>
        <html lang="en">
        <head>
            <meta charset="utf-8">
            <meta http-equiv="X-UA-Compatible" content="IE=edge">
            <meta name="viewport" content="width=device-width, initial-scale=1">
            <title>Github Finder</title>

            <!-- Bootstrap core CSS -->
            <link href="https://bootswatch.com/simplex/bootstrap.min.css" rel="stylesheet">
            <link rel="stylesheet" href="css/style.css">
        </head>

<body>

<nav class="navbar navbar-inverse">
    <div class="container">
        <div class="navbar-header">
            <button type="button" class="navbar-toggle collapsed" data-toggle="collapse" data-target="#navbar" aria-expanded="false" aria-controls="navbar">
                <span class="sr-only">Toggle navigation</span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
            </button>
            <a class="navbar-brand" href="#">Github Finder</a>
        </div>
        <div id="navbar" class="collapse navbar-collapse">
            <ul class="nav navbar-nav">

            </ul>
        </div><!--/.nav-collapse -->
    </div>
</nav>

<div class="registration">

    <div>
        <form action="index.html" method="get">
        <h1>Login</h1>
        <p>Please enter the following details</p>
        UserName:<input type="text" id="username" ><br>
        Password:<input type="password" id="Password" ><br>
        <input type="submit" id="submit" value="register"><br>
            You Don't have an account?<input type="submit" formaction="registration.html" value="signup">
        </form>
    </div>
    <br>


    <script
            src="https://code.jquery.com/jquery-3.1.1.js"
            integrity="sha256-16cdPddA6VdVInumRGo6IbivbERE8p7CQR3HzTBuELA="
            crossorigin="anonymous"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js"></script>
</body>
</html></title>
</head>
<body>

</body>
</html>




$(document).ready(function(){
    $('#searchUser').on('keyup', function(e){
        let username = e.target.value;

        // Make request to Github
        $.ajax({
            url:'https://api.github.com/users/'+username,
            data:{
                client_id:'58b101826e78cc0a713f',
                client_secret:'b18c418d7afe3c59f55130981e280c49ed05cb24'
            }
        }).done(function(user){
            $.ajax({
                url:'https://api.github.com/users/'+username+'/repos',
                data:{
                    client_id:'d9308aacf8b204d361fd',
                    client_secret:'62551cc02cee983fff0bac41baf170eb5a312c1c',
                    sort: 'created: asc',
                    per_page: 5
                }
            }).done(function(repos){
                $.each(repos, function(index, repo){
                    $('#repos').append(`
            <div class="well">
              <div class="row">
                <div class="col-md-7">
                  <strong>${repo.name}</strong>: ${repo.description}
                </div>
                <div class="col-md-3">
                  <span class="label label-default">Forks: ${repo.forks_count}</span>
                  <span class="label label-primary">Watchers: ${repo.watchers_count}</span>
                  <span class="label label-success">Stars: ${repo.stargazers_count}</span>
                </div>
                <div class="col-md-2">
                  <a href="${repo.html_url}" target="_blank" class="btn btn-default">Repo Page</a>
                </div>
              </div>
            </div>
          `);
                });
            });
            $('#profile').html(`<div class="panel panel-default">
          <div class="panel-heading">
            <h3 class="panel-title">${user.name}</h3>
          </div>
          <div class="panel-body">
            <div class="row">
              <div class="col-md-3">
                <img class="img-thumbnail" src="${user.avatar_url}">
                <a target="_blank" class="btn btn-primary btn-block" href="${user.html_url}">View Profile</a>
              </div>
              <div class="col-md-9">
              <span class="label label-default">Public Repos: ${user.public_repos}</span>
              <span class="label label-primary">Public Gists: ${user.public_gists}</span>
              <span class="label label-success">Followers: ${user.followers}</span>
              <span class="label label-info">Following: ${user.following}</span>
              <br><br>
              <ul class="list-group">
                <li class="list-group-item">Company: ${user.company}</li>
                <li class="list-group-item">Website/blog: ${user.blog}</li>
                <li class="list-group-item">Location: ${user.location}</li>
                <li class="list-group-item">Member Since: ${user.created_at}</li>
              </ul>
              </div>
            </div>
          </div>
        </div>
        <h3 class="page-header">Latest Repos</h3>
        <div id="repos"></div>
      `);
        });
    });
});



.avatar{
  width:100%
}





<!doctype html>
<html ng-app="ngOughts">
<head>
    <title>Tut</title>
    <style type="text/css">
        table {
            margin: 10px;
            border: black 1px solid;
        }
        tr {
            margin: 2px;
        }
        td {
            border: black 1px solid;
            width: 30px;
            height: 30px;
            text-align: center;
            font-size: 14px;
        }
        .winning {
            background-color: green;
            color: white;
        }
    </style>
</head>
<body ng-controller="BoardCtrl">
<h1 ng-show="board.won" ng-cloak>{{board.winning_marker}} won the game!</h1>
<table>
    <tr ng-repeat="row in board.grid">
        <td ng-repeat="cell in row" ng-click="board.playCell(cell)" ng-class="{'winning': cell.winning}">
            <span ng-bind="cell.marker"></span>
        </td>
    </tr>
</table>
<button ng-click="board.reset()">Reset</button>
<script type="text/javascript" src="https://ajax.googleapis.com/ajax/libs/angularjs/1.0.7/angular.js"></script>
<script type="text/javascript" src="game.js"></script>
</body>
</html>






var app = angular.module('ngOughts', ['ng']);

(function() {
    var Board = (function(){
        var SIZE, EMPTY, NOUGHT, CROSS, PLAYER_MARKERS, Cell;

        SIZE = 3;
        EMPTY = ' ';
        NOUGHT = 'O';
        CROSS = 'X';
        PLAYER_MARKERS = [NOUGHT, CROSS];

        Cell = (function() {
            function Cell(marker){
                this.marker = marker;
                this.winning = false;
            }
            Cell.prototype.mark = function(marker) {
                this.marker = marker;
            }
            Cell.prototype.hasBeenPlayed = function() {
                return this.marker != EMPTY;
            }
            return Cell;
        })();

        function Board() {
            this.reset();
        }

        Board.prototype.reset = function(){
            this.currentPlayer = 0;
            this.grid = [];
            this.won = false;
            this.gameGoingOn = true;

            for(var i=0; i < SIZE; i++) {
                var row = [];

                for(var j=0; j < SIZE; j++) {
                    row.push(new Cell(EMPTY));
                }

                this.grid.push(row);
            }

            return this.grid;
        };

        Board.prototype._checkRow = function(rowIndex) {
            var numberOfNoughts = 0;
            var numberOfCrosses = 0;

            for(var columnIndex = 0; columnIndex < SIZE; columnIndex++) {
                var cell = this.grid[rowIndex];
                cell = cell[columnIndex];
                var cellMarker = cell.marker;
                if(cellMarker == EMPTY) {
                    return false;
                }
                if(cellMarker == NOUGHT) {
                    numberOfNoughts++;
                } else if(cellMarker == CROSS) {
                    numberOfCrosses++;
                }
            }

            if(numberOfNoughts == SIZE) {
                return NOUGHT;
            } else if(numberOfCrosses == SIZE) {
                return CROSS;
            }
        };

        Board.prototype._checkColumn = function(columnIndex) {
            var numberOfNoughts = 0;
            var numberOfCrosses = 0;

            for(var rowIndex = 0; rowIndex < SIZE; rowIndex++) {
                var cell = this.grid[rowIndex][columnIndex];
                var cellMarker = cell.marker;
                if(cellMarker == EMPTY) {
                    return false;
                }
                if(cellMarker == NOUGHT) {
                    numberOfNoughts++;
                } else if(cellMarker == CROSS) {
                    numberOfCrosses++;
                }
            }

            if(numberOfNoughts == SIZE) {
                return NOUGHT;
            } else if(numberOfCrosses == SIZE) {
                return CROSS;
            }
        }

        Board.prototype._checkDiagonal1 = function() {
            var numberOfNoughts = 0;
            var numberOfCrosses = 0;

            for(var i = 0; i<SIZE; i++) {
                var cellMarker = this.grid[i][i].marker;
                if(cellMarker == EMPTY) {
                    return false;
                }
                if(cellMarker == NOUGHT) {
                    numberOfNoughts++;
                } else if(cellMarker == CROSS) {
                    numberOfCrosses++;
                }
            }

            if(numberOfNoughts == SIZE) {
                return NOUGHT;
            } else if(numberOfCrosses == SIZE) {
                return CROSS;
            }
        }

        Board.prototype._checkDiagonal2 = function() {
            var numberOfNoughts = 0;
            var numberOfCrosses = 0;

            for(var i = 0; i<SIZE; i++) {
                var cellMarker = this.grid[i][SIZE-i-1].marker;
                if(cellMarker == EMPTY) {
                    return false;
                }
                if(cellMarker == NOUGHT) {
                    numberOfNoughts++;
                } else if(cellMarker == CROSS) {
                    numberOfCrosses++;
                }
            }

            if(numberOfNoughts == SIZE) {
                return NOUGHT;
            } else if(numberOfCrosses == SIZE) {
                return CROSS;
            }
        }

        Board.prototype._setWinner = function(marker) {
            this.won = true;
            this.winning_marker = marker;
            this.gameGoingOn = false;
        };

        Board.prototype._markWinnerRow = function(rowIndex) {
            for(var i = 0; i<SIZE; i++) {
                this.grid[rowIndex][i].winning = true;
            }
        }

        Board.prototype._markWinnerColumn = function(columnIndex) {
            for(var i = 0; i<SIZE; i++) {
                this.grid[i][columnIndex].winning = true;
            }
        }

        Board.prototype._markWinnerDiagonal1 = function() {
            for(var i = 0; i<SIZE; i++) {
                this.grid[i][i].winning = true;
            }
        }

        Board.prototype._markWinnerDiagonal2 = function() {
            for(var i = 0; i<SIZE; i++) {
                this.grid[i][SIZE-i-1].winning = true;
            }
        }



        Board.prototype.checkWinner = function() {
            var rowIndex = 0;
            var columnIndex = 0;
            var diagonal1 = 0;
            var diagonal2 = 0;

            for(rowIndex=0; rowIndex < SIZE; rowIndex++) {
                var val = this._checkRow(rowIndex);
                if(val) {
                    this._setWinner(val);
                    this._markWinnerRow(rowIndex);
                }
            }

            for(columnIndex = 0; columnIndex < SIZE; columnIndex++) {
                val = this._checkColumn(columnIndex);
                if(val) {
                    this._setWinner(val);
                    this._markWinnerColumn(columnIndex);
                }
            }

            val = this._checkDiagonal1();
            if(val) {
                this._setWinner(val);
                this._markWinnerDiagonal1();
            }

            val = this._checkDiagonal2();
            if(val) {
                this._setWinner(val);
                this._markWinnerDiagonal2();
            }
        };

        Board.prototype.playCell = function(cell) {
            if(!(this.gameGoingOn)) {
                return;
            }
            if(cell.hasBeenPlayed()) {
                return;
            }
            cell.mark(this.currentPlayerMarker());
            this.checkWinner();
            this.switchPlayer();
        };

        Board.prototype.currentPlayerMarker = function() {
            return PLAYER_MARKERS[this.currentPlayer];
        }

        Board.prototype.switchPlayer = function() {
            this.currentPlayer = 1 - this.currentPlayer;
        }

        return Board;
    })();

    angular.module('ngOughts').factory('Board', function(){
        return Board;
    });

}).call(this);



app.controller('BoardCtrl', function($scope, Board){
    $scope.board = new Board;
});
